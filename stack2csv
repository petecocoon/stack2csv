#!/usr/bin/env python3

import sys
import boto3
import csv

cfn = boto3.resource('cloudformation')
client = boto3.client('cloudformation') 


def list_stack():
    kwargs = {}
    resources = []
    while "NextToken" not in kwargs or kwargs["NextToken"]:    
        results = client.list_stacks(**kwargs)
        kwargs["NextToken"] = results.get("NextToken")
        resources = resources + results['StackSummaries']
    return resources


def list_stack_resource(stack_name):
    kwargs = {"StackName": stack_name}
    resources = []
    while "NextToken" not in kwargs or kwargs["NextToken"]:    
        results = client.list_stack_resources(**kwargs)
        kwargs["NextToken"] = results.get("NextToken")
        resources = resources + results['StackResourceSummaries']
    return resources


def create_csv(filename="resources.csv", stack_filter=None):
    keys = ['LogicalResourceId', 'ResourceType', 'LastUpdatedTimestamp', 'ResourceStatus', 'PhysicalResourceId']
    stacks = list_stack()
    if stack_filter is not None:
        stacks = list(filter(lambda x: x["StackName"].startswith(stack_filter), stacks))
    with open(filename, 'w') as csvfile:
        csv_writer = csv.writer(csvfile)
        csv_writer.writerow(["StackName"] + keys)

        for stack in stacks:
            if stack['StackStatus'] not in ['UPDATE_COMPLETE', 'CREATE_COMPLETE']:
                continue
            print(stack["StackName"])
            stack_details = list_stack_resource(stack['StackName'])
            for detail in stack_details:
                values = [stack['StackName']]
                for k in keys:
                    values.append(detail[k])
                csv_writer.writerow(values)


def main():
    filter_prefix = sys.argv[2] if 2 < len(sys.argv) else None
    filename = sys.argv[1] if 1 < len(sys.argv) else "resources.csv"
    create_csv(filename, filter_prefix)


if __name__ == "__main__":
    main()

